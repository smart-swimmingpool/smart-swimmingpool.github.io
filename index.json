[{"authors":["stritti"],"categories":null,"content":"TBD\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1654982086,"objectID":"f086055dff08b2de3b0f6e0ad6ee2c91","permalink":"https://smart-swimmingpool.github.io/author/stephan-strittmatter/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/stephan-strittmatter/","section":"authors","summary":"TBD","tags":null,"title":"Stephan Strittmatter","type":"authors"},{"authors":null,"categories":null,"content":"üèä The Homie 3.0 compatible Smart Swimmingpool Controller üéõÔ∏è\nWatch Star  GitHub Sources \nManage your swmming pool on the smart way to enjoy it in confortable and cheap (less than 100‚Ç¨) way.\nMain Features  Manage water timed circulation for cleaning Manage water heating by additional pump for solar circuit Homie 3.0 compatible MQTT messaging Independent of specific smarthome servers  openHAB since Version 2.4 using MQTT Homie Home Assistant using MQTT Homie   Timesync via NTP (europe.pool.ntp.org) Logging-Information via Homie-Node  Planned Features  Configurable NTP Server (currently hardcoded: europe.pool.ntp.org) Be more smart: self learning for improved pool pump timed circulation for cleaning and heating Two separate circulation cycles Store configuration changes persistent on conroller Temperature based cleaning circulation time (colder == shorter, hotter == longer) Improved sketch to work completly without WiFi connection Homie should run without WiFi connection Enhance sketch using display and buttons to setup environment. Use only one power supply for ESP8266 (5V) and relais (230V) see also the issue list   \n  Breadboard Circuit of Pool Controller   ","date":1590624e3,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1591056e3,"objectID":"d7585f2590c711d01ee03920c8937707","permalink":"https://smart-swimmingpool.github.io/docs/pool-controller/","publishdate":"2020-05-28T00:00:00Z","relpermalink":"/docs/pool-controller/","section":"docs","summary":"Control your Smart Swimming Pool smart","tags":["docs","controller","tutorial"],"title":"Pool Controller 2.0","type":"docs"},{"authors":null,"categories":null,"content":"üèä Smart Swimming Pool: Home automation for smarter Control of your Swimming Pool\nExample Environment In my setting I have a thermal solar system for heating water and for support of heating environment within the house. the heated water is collected within a buffer which has a third circulation for my pool. Attached to this third circulation a pump is attached to heat via heat exchanger the water of the pool:\n  Example Environment   Basic Requirements  Swimming pool with sand filter system Heating circuit with heat exchanger that can be switched on via a pump Solar heat storage tank with additional heating circuit for the pool  Preparations If a heating circuit is prepared via a heat exchanger, the implementation of the smart control of the pool can be started.\nThe heart of the system is the Pool Controller. This is responsible for the central control of:\n Circulation period for cleaning by means of a sand filter system Switching on the heating circuit for warming up the pool water Reporting of statuses and current temperatures for integration into Smart Home Server solutions  The pool controller supports the MQTT based protocol Homie for communication with other smart home systems and thus offers easy integration into openHAB. Using the configuration for the openHAB-Server presented here, the pool controller can be quickly and easily controlled and configured.\nHistory üèä Smart Swimming Pool is based on the first project which was not yet modular and had implemented the control logic within openHAB rules.\nThe first version was in use in Summer 2018 and showed some weaknesses:\n Controlling the pumps via 433 MHz socket switches was not reliable, because there were no confirmation and the status was unknown. The switching logic was implemented in rules on the openHAB server. This led to problems, if the WiFi does not work reliably. The MQTT messages had a proprietary message format.  From the experience of the summer of 2018 resulted this revised version of the üèä Smart Swimming Pool: modular, resiliant using standards.\n","date":1590624e3,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1654982086,"objectID":"17b09a9dc5200475d8a306f18e63a0f9","permalink":"https://smart-swimmingpool.github.io/docs/getting-started/","publishdate":"2020-05-28T00:00:00Z","relpermalink":"/docs/getting-started/","section":"docs","summary":"üèä Smart Swimming Pool: Home automation for smarter Control of your Swimming Pool\nExample Environment In my setting I have a thermal solar system for heating water and for support of heating environment within the house.","tags":["docs","getting-started","tutorial"],"title":"Getting Started","type":"docs"},{"authors":null,"categories":null,"content":"Watch Star  GitHub Project \nConfiguration example to use the Smart Swimming Pool system on openHAB.\nFeatures  Switch Modes: Auto, Manual, Boost, Timer Monitor current temparature of pool water and solar heating Configuration of  start and end time of cleaning circulation time max. temparature of pool water min temparature of solar heating hystesis   Compatible with Alexa openHAB Add-on  OpenHAB BasicUI Sitemap    openHAB Pool Automation: Overview openHAB Pool Automation: Settings          Mobile App (openHAB iOS) This configuration running on openHAB iOS App:\n   openHAB Pool Automation: Overview openHAB Pool Automation: Temparature             openHAB Pool Automation: Settings openHAB Pool Automation: Settings          Precondition The Smart Swimming Pool project uses Homie 3.0 based MQTT messaging. Therfor you have to install an MQTT broker in your environment.\nRaspberry Pi I use an Raspberry Pi (Model 3) ( Amazon). The latest version of openHAB has an embedded MQTT broker. In this example a seperate broker Mosquitto on same Raspberry Pi is configured.\nInstall Mosquitto  Install Mosquitto on Raspberry Pi: sudo apt-get update sudo apt-get upgrade sudo apt-get install mosquitto   In Paper UI install add-on \u0026lsquo;MQTT Binding\u0026rsquo; from bindings. Check services/mqtt.cfg for your environment.  ","date":1590624e3,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1591056e3,"objectID":"cae63e6bce6f2a8e5f62d11a9073826c","permalink":"https://smart-swimmingpool.github.io/docs/openhab-configuration/","publishdate":"2020-05-28T00:00:00Z","relpermalink":"/docs/openhab-configuration/","section":"docs","summary":"Watch Star  GitHub Project \nConfiguration example to use the Smart Swimming Pool system on openHAB.\nFeatures  Switch Modes: Auto, Manual, Boost, Timer Monitor current temparature of pool water and solar heating Configuration of  start and end time of cleaning circulation time max.","tags":["docs","openHAB","tutorial"],"title":"OpenHAB Configuration","type":"docs"},{"authors":["Stephan Strittmatter"],"categories":["docs"],"content":"üèä Smart Swimming Pool: Automate your Swimming Pool in smart way\nThis project is splitted in several modules:\n  Pool Controller: The heart of the üèä Smart Swimming Pool  openHAB Configuration: Example of a sitemap to control üèä Smart Swimming Pool via App.  Not jet documented or just planned modules:\n Pool Monitor: Show the current pool temperature by solar powered display. Smart Analyser: Analyse the qualitiy of water.  Additional content could be found in commuity driven Wiki.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1654982086,"objectID":"4cdd37113783e47641dd300543c94e1b","permalink":"https://smart-swimmingpool.github.io/docs/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/docs/","section":"docs","summary":"üèä Smart Swimming Pool: Automate your Swimming Pool in smart way\nThis project is splitted in several modules:\n  Pool Controller: The heart of the üèä Smart Swimming Pool  openHAB Configuration: Example of a sitemap to control üèä Smart Swimming Pool via App.","tags":null,"title":"Documents","type":"docs"},{"authors":null,"categories":null,"content":"   Project Smart Swimming Pool , December, 2018\nBlogpost of version 1 of Smart Swimming Pool\n  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1654982086,"objectID":"043141d67b0860347d9b6c19e9ee32cc","permalink":"https://smart-swimmingpool.github.io/docs/publications/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/docs/publications/","section":"docs","summary":"Publications about Smart Swimming Pool","tags":["docs","publication"],"title":"Publications","type":"docs"},{"authors":null,"categories":null,"content":"Development Environment Required Libraries  adafruit/Adafruit BusIO adafruit/Adafruit GFX Library zinggjm/GxEPD juerd/ESP-WiFiSettings olikraus/U8g2 olikraus/U8g2_for_Adafruit_GFX knolleary/PubSubClient arduino-libraries/NTPClient madpilot/mDNSResolver jchristensen/Timezone  Many thanks to maintainers of these libraries!\nDefines Configuration ","date":1654905600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1654905600,"objectID":"28c1febb1958075c05051637aca30212","permalink":"https://smart-swimmingpool.github.io/docs/pool-monitor/software-guide/","publishdate":"2022-06-11T00:00:00Z","relpermalink":"/docs/pool-monitor/software-guide/","section":"docs","summary":"Development Environment Required Libraries  adafruit/Adafruit BusIO adafruit/Adafruit GFX Library zinggjm/GxEPD juerd/ESP-WiFiSettings olikraus/U8g2 olikraus/U8g2_for_Adafruit_GFX knolleary/PubSubClient arduino-libraries/NTPClient madpilot/mDNSResolver jchristensen/Timezone  Many thanks to maintainers of these libraries!\nDefines Configuration ","tags":["docs","monitor","tutorial"],"title":"Software Guide of Pool Monitor","type":"docs"},{"authors":null,"categories":null,"content":"Setup Connecting the device to power it createsinitial a hotspot called \u0026ldquo;pool-monitor\u0026rdquo;. Please connect this hotsppot by smartphone. Thenthe device will show captivate website to add WiFi credentials and connection parameters of MQTT broker.\nFollowing data is required to connect the device:\n SSID of the WiFi network Password of WiFi network MQTT broker hostname or IP address MQTT broker port number (default: 1883)  After pressing \u0026ldquo;Save\u0026rdquo; the device will reboot automatically and tries to connect to the MQTT broker.\nAfter some seconds the device will show data if connection was successful.\n","date":1654905600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1654905600,"objectID":"4152af68ce30a65fdac1f25dcb37d086","permalink":"https://smart-swimmingpool.github.io/docs/pool-monitor/users-guide/","publishdate":"2022-06-11T00:00:00Z","relpermalink":"/docs/pool-monitor/users-guide/","section":"docs","summary":"Control your Smart Swimming Pool smart","tags":["docs","monitor","tutorial"],"title":"Users Guide of Pool Controller","type":"docs"},{"authors":null,"categories":null,"content":"This Hardware Guide will describe how to setup the hardware of the controller.\nParts List (BOM)  1 * ESP8266 NodeMCU Controller ( Amazon) 2 * DS18B20 Temperature Sensors ( Amazon) 1 * Relais-Module 5V ( Amazon) 1 * Breadboard and wires to connect (alternativly soldering of the circuit)  Circuit The circuit of the controller could be found on following image based on a breadboard wireing:\n  Breadboard Circuit of Pool Controller   The source Fritzing file could be found in GitHub project: pool-controller.fzz\nESP8266 PIN Usage The ESP8266 is connected using following PINs. You can find the constant values within the sources of main.cpp (first column of table) which are associated to the pins.\n   Constant in Source PIN of ESP8266 Description     PIN_DS_SOLAR D5 Pin of temperature sensor (DS18B20) for solar storage   PIN_DS_POOL D6 Pin of temperature sensor (DS18B20) for pool water   PIN_RELAY_POOL D1 Pin to connect relais for pool pump   PIN_RELAY_SOLAR D2 Pin to connect relais for solar pump     TODO: improve PIN usage (see https://randomnerdtutorials.com/esp8266-pinout-reference-gpios/)   Power Supply In my environment I use the USB to power the ESP8266 via small USB-Power-Adapter andan additional 230V power plug to be used as source for the power of the pumps which are switched via the relais.\n","date":1590624e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591056e3,"objectID":"2e135138a058b8e9c5dda83c65d04622","permalink":"https://smart-swimmingpool.github.io/docs/pool-controller/hardware-guide/","publishdate":"2020-05-28T00:00:00Z","relpermalink":"/docs/pool-controller/hardware-guide/","section":"docs","summary":"This Hardware Guide will describe how to setup the hardware of the controller.\nParts List (BOM)  1 * ESP8266 NodeMCU Controller ( Amazon) 2 * DS18B20 Temperature Sensors ( Amazon) 1 * Relais-Module 5V ( Amazon) 1 * Breadboard and wires to connect (alternativly soldering of the circuit)  Circuit The circuit of the controller could be found on following image based on a breadboard wireing:","tags":["docs","controller","tutorial"],"title":"Hardware Guide of Pool Controller","type":"docs"},{"authors":null,"categories":null,"content":"Development Environment Required Libraries   Homie-ESP8266  RelayModule  Vector DallasTemperature Adafruit Unified Sensor DHT sensor library NTPClient TimeZone  Time  Many thanks to maintainers of these libraries!\nDefines Within the sources at main.cpp there are someconstant defined settings. For the PIN assignment see also at hardware guide.\nconst uint8_t PIN_DS_SOLAR = D5; // Pin of Temp-Sensor Solar const uint8_t PIN_DS_POOL = D6; // Pin of Temp-Sensor Pool const uint8_t PIN_RELAY_POOL = D1; const uint8_t PIN_RELAY_SOLAR = D2; const uint8_t TEMP_READ_INTERVALL = 30;  Configuration Homie-ESP8266 supports configuration (e.g. WiFi credentials) using JSON-files. How to upload JSON config files see Homie-esp8266 docu.\nExample config.json { \u0026quot;name\u0026quot;: \u0026quot;Pool Controller\u0026quot;, \u0026quot;device_id\u0026quot;: \u0026quot;pool-controller\u0026quot;, \u0026quot;wifi\u0026quot;: { \u0026quot;ssid\u0026quot;: \u0026quot;\u0026lt;SSID\u0026gt;\u0026quot;, \u0026quot;password\u0026quot;: \u0026quot;\u0026lt;XXX\u0026gt;\u0026quot; }, \u0026quot;mqtt\u0026quot;: { \u0026quot;host\u0026quot;: \u0026quot;\u0026lt;MQTT_HOST\u0026gt;\u0026quot;, \u0026quot;port\u0026quot;: 1883 }, \u0026quot;ota\u0026quot;: { \u0026quot;enabled\u0026quot;: true }, \u0026quot;settings\u0026quot;: { \u0026quot;loop-interval\u0026quot;: 60, \u0026quot;temperature-max-pool\u0026quot;: 28, \u0026quot;temperature-min-solar\u0026quot;: 50, \u0026quot;temperature-hysteresis\u0026quot;: 0.5 } }  MQTT Communication Clearing retained messages In some cases some retained messages can be wanted and we don‚Äôt want to clear all the retained messages.\nThe messages will have to be cleared one by one using the topic\nTo clear a specific message:\nmosquitto_pub -h hostname -t homie -n -r -d  ","date":1590624e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591056e3,"objectID":"87b57eee8a1a6fd676a73279f8aae485","permalink":"https://smart-swimmingpool.github.io/docs/pool-controller/software-guide/","publishdate":"2020-05-28T00:00:00Z","relpermalink":"/docs/pool-controller/software-guide/","section":"docs","summary":"Development Environment Required Libraries   Homie-ESP8266  RelayModule  Vector DallasTemperature Adafruit Unified Sensor DHT sensor library NTPClient TimeZone  Time  Many thanks to maintainers of these libraries!","tags":["docs","controller","tutorial"],"title":"Software Guide of Pool Controller","type":"docs"},{"authors":null,"categories":null,"content":"Setup Booting Controller Booting the controller, it will give feedback on establishing WiFi connection andconnection to MQTT broker:\n \u0026ldquo;LED\u0026rdquo; Slowly when connecting to the Wi-Fi \u0026ldquo;LED\u0026rdquo; Faster when connecting to the MQTT broker  Settings There are some specific settings for the controller:\n  Pool max. temperature: The maximum temperature of the water in the pool which should not be exceeded.\n Unit: ¬∞C Default value: 29    Solar min temperature: The minimum temerature of the heat storage tank which should not be fall below.\n Unit: ¬∞C Default value: 50    Hysteresis: Hysteresis in Kelvin which is used to verify if heating should be enabled or disabled to prevent fast toggeling.\n Unit: K Default value: 1    Pump Timer: time range when pool pump has to run.\n start h/min end h/min    Loop Interval:\n Unit: sec Default value: 30    Rules The Smart Swimmingpool Controller implements Rules to handle different situations:\nRule: Manual The pump for cleaning and solar heating are enabled/disabled completely manual and independent.\nRule: Timer This rule enables the cleaning pump based on timer settings. Solar heating is disabled.\nRule: Auto This rule enables the cleaning pump based on timer settings. Solar heating is enabled smart if cleaning pump is enabled by timer and the heat storage tank has enough temperature.\nIf the maximum temperature of the pool water is reached, the solar heating is disabled.\nRule: Boost Heating of pool water with all power.\nMQTT Interface The Smart Swimmingpool Controller uses MQTT to communicate with your smart home. For the transmission of data the IoT standard Homie 3.0 is used.\nUsing Homie 3.0 it is possible to integrate Smart Pool Controller directly in open source smarthome server openHAB or Home Assistant.\nOpenHAB Integration The Smart Swimmingpool Controller could be integrated in openHAB since version 2.4.\nIt is possible to interact with the controller to enable/disable the pump or to swith the current rule.\nAlso it is possible to monitor the current values of temperatures or states.\nAt least the settings could be updated, too.\n TODO: add example of openhab config.  Device Properties ","date":1590624e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591056e3,"objectID":"15392fe649af0c5b942ab5b76792c3aa","permalink":"https://smart-swimmingpool.github.io/docs/pool-controller/users-guide/","publishdate":"2020-05-28T00:00:00Z","relpermalink":"/docs/pool-controller/users-guide/","section":"docs","summary":"Control your Smart Swimming Pool smart","tags":["docs","controller","tutorial"],"title":"Users Guide of Pool Controller","type":"docs"},{"authors":null,"categories":null,"content":"Copyright (c) 2018-2020 Smart Swimming Pool, Stephan Strittmatter\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u0026ldquo;Software\u0026rdquo;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \u0026ldquo;AS IS\u0026rdquo;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","date":1534633200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1654982086,"objectID":"53e892b8b41cc4caece1cfd5ef21d6e7","permalink":"https://smart-swimmingpool.github.io/license/","publishdate":"2018-08-19T00:00:00+01:00","relpermalink":"/license/","section":"","summary":"Copyright (c) 2018-2020 Smart Swimming Pool, Stephan Strittmatter\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u0026ldquo;Software\u0026rdquo;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","tags":null,"title":"MIT License","type":"page"},{"authors":null,"categories":null,"content":"Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\nOur Standards Examples of behavior that contributes to creating a positive environment include:\n Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members  Examples of unacceptable behavior by participants include:\n The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting  Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\nScope This Code of Conduct applies within all project spaces, and it also applies when an individual is representing the project or its community in public spaces. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\nEnforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [INSERT EMAIL ADDRESS]. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project\u0026rsquo;s leadership.\nAttribution This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\nFor answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1654982086,"objectID":"d3030a18b089fdb1fbfabf6e75e4aef0","permalink":"https://smart-swimmingpool.github.io/code-of-conduct/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/code-of-conduct/","section":"","summary":"Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.","tags":null,"title":"Contributor Covenant Code of Conduct","type":"page"}]