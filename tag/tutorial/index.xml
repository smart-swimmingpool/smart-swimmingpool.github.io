<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tutorial | Smart Swimming Pool</title><link>https://smart-swimmingpool.github.io/tag/tutorial/</link><atom:link href="https://smart-swimmingpool.github.io/tag/tutorial/index.xml" rel="self" type="application/rss+xml"/><description>tutorial</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>¬© 2021 - üèä Smart Swimming Pool</copyright><lastBuildDate>Thu, 28 May 2020 00:00:00 +0000</lastBuildDate><image><url>https://smart-swimmingpool.github.io/images/icon_huc1aac635c547f103b14921ae0ab7550f_20089_512x512_fill_lanczos_center_3.png</url><title>tutorial</title><link>https://smart-swimmingpool.github.io/tag/tutorial/</link></image><item><title>Hardware Guide of Pool Controller</title><link>https://smart-swimmingpool.github.io/docs/pool-controller/hardware-guide/</link><pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate><guid>https://smart-swimmingpool.github.io/docs/pool-controller/hardware-guide/</guid><description>&lt;p>This Hardware Guide will describe how to setup the hardware of the controller.&lt;/p>
&lt;h2 id="parts-list-bom">Parts List (BOM)&lt;/h2>
&lt;ul>
&lt;li>1 * ESP8266 NodeMCU Controller (
&lt;a href="https://amzn.to/2Ze9DSh" target="_blank" rel="noopener">Amazon&lt;/a>)&lt;/li>
&lt;li>2 * DS18B20 Temperature Sensors (
&lt;a href="https://amzn.to/2ZlfZ2c" target="_blank" rel="noopener">Amazon&lt;/a>)&lt;/li>
&lt;li>1 * Relais-Module 5V (
&lt;a href="https://amzn.to/31RBd5s" target="_blank" rel="noopener">Amazon&lt;/a>)&lt;/li>
&lt;li>1 * Breadboard and wires to connect (alternativly soldering of the circuit)&lt;/li>
&lt;/ul>
&lt;h2 id="circuit">Circuit&lt;/h2>
&lt;p>The circuit of the controller could be found on following image based on a breadboard wireing:&lt;/p>
&lt;figure id="figure-breadboard-circuit-of-pool-controller">
&lt;a data-fancybox="" href="https://smart-swimmingpool.github.io/pool-controller_breadboard.png" data-caption="Breadboard Circuit of Pool Controller">
&lt;img src="https://smart-swimmingpool.github.io/pool-controller_breadboard.png" alt="" >
&lt;/a>
&lt;figcaption>
Breadboard Circuit of Pool Controller
&lt;/figcaption>
&lt;/figure>
&lt;p>The source
&lt;a href="https://fritzing.org/" target="_blank" rel="noopener">Fritzing&lt;/a> file could be found in GitHub project:
&lt;a href="https://github.com/smart-swimmingpool/pool-controller/raw/master/docs/pool-controller.fzz" target="_blank" rel="noopener">pool-controller.fzz&lt;/a>&lt;/p>
&lt;h3 id="esp8266-pin-usage">ESP8266 PIN Usage&lt;/h3>
&lt;p>The ESP8266 is connected using following PINs. You can find the constant values within the sources
of &lt;code>main.cpp&lt;/code> (first column of table) which are associated to the pins.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Constant in Source&lt;/th>
&lt;th style="text-align:center">PIN of ESP8266&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>PIN_DS_SOLAR&lt;/td>
&lt;td style="text-align:center">D5&lt;/td>
&lt;td>Pin of temperature sensor (DS18B20) for solar storage&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PIN_DS_POOL&lt;/td>
&lt;td style="text-align:center">D6&lt;/td>
&lt;td>Pin of temperature sensor (DS18B20) for pool water&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PIN_RELAY_POOL&lt;/td>
&lt;td style="text-align:center">D1&lt;/td>
&lt;td>Pin to connect relais for pool pump&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PIN_RELAY_SOLAR&lt;/td>
&lt;td style="text-align:center">D2&lt;/td>
&lt;td>Pin to connect relais for solar pump&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="alert alert-note">
&lt;div>
TODO: improve PIN usage (see &lt;a href="https://randomnerdtutorials.com/esp8266-pinout-reference-gpios/">https://randomnerdtutorials.com/esp8266-pinout-reference-gpios/&lt;/a>)
&lt;/div>
&lt;/div>
&lt;h2 id="power-supply">Power Supply&lt;/h2>
&lt;p>In my environment I use the USB to power the ESP8266 via small USB-Power-Adapter andan additional
230V power plug to be used as source for the power of the pumps which are switched via the relais.&lt;/p></description></item><item><title>Software Guide of Pool Controller</title><link>https://smart-swimmingpool.github.io/docs/pool-controller/software-guide/</link><pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate><guid>https://smart-swimmingpool.github.io/docs/pool-controller/software-guide/</guid><description>&lt;h2 id="development-environment">Development Environment&lt;/h2>
&lt;h2 id="required-libraries">Required Libraries&lt;/h2>
&lt;ul>
&lt;li>
&lt;a href="https://github.com/homieiot/homie-esp8266" target="_blank" rel="noopener">Homie-ESP8266&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://github.com/YuriiSalimov/RelayModule" target="_blank" rel="noopener">RelayModule&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://github.com/tomstewart89/Vector" target="_blank" rel="noopener">Vector&lt;/a>&lt;/li>
&lt;li>DallasTemperature&lt;/li>
&lt;li>Adafruit Unified Sensor&lt;/li>
&lt;li>DHT sensor library&lt;/li>
&lt;li>NTPClient&lt;/li>
&lt;li>TimeZone&lt;/li>
&lt;li>
&lt;a href="https://github.com/xoseperez/Time" target="_blank" rel="noopener">Time&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Many thanks to maintainers of these libraries!&lt;/p>
&lt;h2 id="defines">Defines&lt;/h2>
&lt;p>Within the sources at &lt;code>main.cpp&lt;/code> there are someconstant defined settings. For the PIN assignment
see also at
&lt;a href="../hardware-guide/#esp8266-pin-usage">hardware guide&lt;/a>.&lt;/p>
&lt;pre>&lt;code class="language-cpp">const uint8_t PIN_DS_SOLAR = D5; // Pin of Temp-Sensor Solar
const uint8_t PIN_DS_POOL = D6; // Pin of Temp-Sensor Pool
const uint8_t PIN_RELAY_POOL = D1;
const uint8_t PIN_RELAY_SOLAR = D2;
const uint8_t TEMP_READ_INTERVALL = 30;
&lt;/code>&lt;/pre>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>Homie-ESP8266 supports configuration (e.g. WiFi credentials) using JSON-files.
How to upload JSON config files see
&lt;a href="https://homieiot.github.io/homie-esp8266/docs/develop/configuration/json-configuration-file/" target="_blank" rel="noopener">Homie-esp8266 docu&lt;/a>.&lt;/p>
&lt;h3 id="example-configjson">Example &lt;code>config.json&lt;/code>&lt;/h3>
&lt;pre>&lt;code class="language-json">{
&amp;quot;name&amp;quot;: &amp;quot;Pool Controller&amp;quot;,
&amp;quot;device_id&amp;quot;: &amp;quot;pool-controller&amp;quot;,
&amp;quot;wifi&amp;quot;: {
&amp;quot;ssid&amp;quot;: &amp;quot;&amp;lt;SSID&amp;gt;&amp;quot;,
&amp;quot;password&amp;quot;: &amp;quot;&amp;lt;XXX&amp;gt;&amp;quot;
},
&amp;quot;mqtt&amp;quot;: {
&amp;quot;host&amp;quot;: &amp;quot;&amp;lt;MQTT_HOST&amp;gt;&amp;quot;,
&amp;quot;port&amp;quot;: 1883
},
&amp;quot;ota&amp;quot;: {
&amp;quot;enabled&amp;quot;: true
},
&amp;quot;settings&amp;quot;: {
&amp;quot;loop-interval&amp;quot;: 60,
&amp;quot;temperature-max-pool&amp;quot;: 28,
&amp;quot;temperature-min-solar&amp;quot;: 50,
&amp;quot;temperature-hysteresis&amp;quot;: 0.5
}
}
&lt;/code>&lt;/pre>
&lt;h2 id="mqtt-communication">MQTT Communication&lt;/h2>
&lt;h3 id="clearing-retained-messages">Clearing retained messages&lt;/h3>
&lt;p>In some cases some retained messages can be wanted and we don‚Äôt want to clear all the retained messages.&lt;/p>
&lt;p>The messages will have to be cleared one by one using the topic&lt;/p>
&lt;p>To clear a specific message:&lt;/p>
&lt;pre>&lt;code class="language-bash">mosquitto_pub -h hostname -t homie -n -r -d
&lt;/code>&lt;/pre></description></item><item><title>Users Guide of Pool Controller</title><link>https://smart-swimmingpool.github.io/docs/pool-controller/users-guide/</link><pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate><guid>https://smart-swimmingpool.github.io/docs/pool-controller/users-guide/</guid><description>&lt;h2 id="setup">Setup&lt;/h2>
&lt;h2 id="booting-controller">Booting Controller&lt;/h2>
&lt;p>Booting the controller, it will give feedback on establishing WiFi connection andconnection to MQTT broker:&lt;/p>
&lt;ul>
&lt;li>&amp;ldquo;LED&amp;rdquo; &lt;img src="led_wifi.gif" alt="Slowly blinking LED">
Slowly when connecting to the Wi-Fi&lt;/li>
&lt;li>&amp;ldquo;LED&amp;rdquo; &lt;img src="led_mqtt.gif" alt="Fast blinking LED">
Faster when connecting to the MQTT broker&lt;/li>
&lt;/ul>
&lt;h2 id="settings">Settings&lt;/h2>
&lt;p>There are some specific settings for the controller:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Pool max. temperature:&lt;/strong> The maximum temperature of the water in the pool which should not be exceeded.&lt;/p>
&lt;ul>
&lt;li>Unit: &lt;code>¬∞C&lt;/code>&lt;/li>
&lt;li>Default value: &lt;code>29&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Solar min temperature:&lt;/strong> The minimum temerature of the heat storage tank which should not be fall below.&lt;/p>
&lt;ul>
&lt;li>Unit: &lt;code>¬∞C&lt;/code>&lt;/li>
&lt;li>Default value: &lt;code>50&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Hysteresis:&lt;/strong> Hysteresis in Kelvin which is used to verify if heating should be enabled or disabled to prevent fast toggeling.&lt;/p>
&lt;ul>
&lt;li>Unit: &lt;code>K&lt;/code>&lt;/li>
&lt;li>Default value: &lt;code>1&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Pump Timer:&lt;/strong> time range when pool pump has to run.&lt;/p>
&lt;ul>
&lt;li>start h/min&lt;/li>
&lt;li>end h/min&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Loop Interval:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Unit: &lt;code>sec&lt;/code>&lt;/li>
&lt;li>Default value: &lt;code>30&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="rules">Rules&lt;/h2>
&lt;p>The &lt;strong>Smart Swimmingpool Controller&lt;/strong> implements &lt;code>Rules&lt;/code> to handle different situations:&lt;/p>
&lt;h3 id="rule-manual">Rule: Manual&lt;/h3>
&lt;p>The pump for cleaning and solar heating are enabled/disabled completely manual and independent.&lt;/p>
&lt;h3 id="rule-timer">Rule: Timer&lt;/h3>
&lt;p>This rule enables the cleaning pump based on timer settings.
Solar heating is disabled.&lt;/p>
&lt;h3 id="rule-auto">Rule: Auto&lt;/h3>
&lt;p>This rule enables the cleaning pump based on timer settings.
Solar heating is enabled &lt;strong>smart&lt;/strong> if cleaning pump is enabled by timer and the heat storage tank has enough temperature.&lt;/p>
&lt;p>If the maximum temperature of the pool water is reached, the solar heating is disabled.&lt;/p>
&lt;h3 id="rule-boost">Rule: Boost&lt;/h3>
&lt;p>Heating of pool water with all power.&lt;/p>
&lt;h2 id="mqtt-interface">MQTT Interface&lt;/h2>
&lt;p>The &lt;strong>Smart Swimmingpool Controller&lt;/strong> uses
&lt;a href="http://mqtt.org/" target="_blank" rel="noopener">MQTT&lt;/a> to communicate with your smart home. For the transmission of data the IoT standard
&lt;a href="https://homieiot.github.io" target="_blank" rel="noopener">Homie 3.0&lt;/a> is used.&lt;/p>
&lt;p>Using Homie 3.0 it is possible to integrate &lt;strong>Smart Pool Controller&lt;/strong> directly in open source smarthome server
&lt;a href="https://www.openhab.org/" target="_blank" rel="noopener">openHAB&lt;/a> or
&lt;a href="https://www.home-assistant.io/" target="_blank" rel="noopener">Home Assistant&lt;/a>.&lt;/p>
&lt;h2 id="openhab-integration">OpenHAB Integration&lt;/h2>
&lt;p>The &lt;strong>Smart Swimmingpool Controller&lt;/strong> could be integrated in
&lt;a href="https://www.openhab.org" target="_blank" rel="noopener">openHAB&lt;/a> since version 2.4.&lt;/p>
&lt;p>It is possible to interact with the controller to enable/disable the pump or to swith the current rule.&lt;/p>
&lt;p>Also it is possible to monitor the current values of temperatures or states.&lt;/p>
&lt;p>At least the
&lt;a href="#settings">settings&lt;/a> could be updated, too.&lt;/p>
&lt;ul>
&lt;li>TODO: add example of openhab config.&lt;/li>
&lt;/ul>
&lt;h3 id="device">Device&lt;/h3>
&lt;h3 id="properties">Properties&lt;/h3></description></item></channel></rss>